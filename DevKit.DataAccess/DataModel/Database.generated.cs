//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModel
{
	/// <summary>
	/// Database       : DevKit
	/// Data Source    : tcp://localhost:5432
	/// Server Version : 9.6.1
	/// </summary>
	public partial class DevKitDB : LinqToDB.Data.DataConnection
	{
		public ITable<Associado>            Associado            { get { return this.GetTable<Associado>(); } }
		public ITable<AssociadoCategoria>   AssociadoCategoria   { get { return this.GetTable<AssociadoCategoria>(); } }
		public ITable<AssociadoContato>     AssociadoContato     { get { return this.GetTable<AssociadoContato>(); } }
		public ITable<AssociadoDependente>  AssociadoDependente  { get { return this.GetTable<AssociadoDependente>(); } }
		public ITable<AssociadoEmail>       AssociadoEmail       { get { return this.GetTable<AssociadoEmail>(); } }
		public ITable<AssociadoEndereco>    AssociadoEndereco    { get { return this.GetTable<AssociadoEndereco>(); } }
		public ITable<AssociadoMensagem>    AssociadoMensagem    { get { return this.GetTable<AssociadoMensagem>(); } }
		public ITable<AssociadoTelefone>    AssociadoTelefone    { get { return this.GetTable<AssociadoTelefone>(); } }
		public ITable<AuditLog>             AuditLog             { get { return this.GetTable<AuditLog>(); } }
		public ITable<Autorizacao>          Autorizacao          { get { return this.GetTable<Autorizacao>(); } }
		public ITable<Cidade>               Cidade               { get { return this.GetTable<Cidade>(); } }
		public ITable<CompanyNews>          CompanyNews          { get { return this.GetTable<CompanyNews>(); } }
		public ITable<Empresa>              Empresa              { get { return this.GetTable<Empresa>(); } }
		public ITable<Especialidade>        Especialidade        { get { return this.GetTable<Especialidade>(); } }
		public ITable<Estado>               Estado               { get { return this.GetTable<Estado>(); } }
		public ITable<Fechamento>           Fechamento           { get { return this.GetTable<Fechamento>(); } }
		public ITable<LoteGrafica>          LoteGrafica          { get { return this.GetTable<LoteGrafica>(); } }
		public ITable<LoteGraficaCartao>    LoteGraficaCartao    { get { return this.GetTable<LoteGraficaCartao>(); } }
		public ITable<Medico>               Medico               { get { return this.GetTable<Medico>(); } }
		public ITable<MedicoAddress>        MedicoAddress        { get { return this.GetTable<MedicoAddress>(); } }
		public ITable<MedicoEmail>          MedicoEmail          { get { return this.GetTable<MedicoEmail>(); } }
		public ITable<MedicoEmpresa>        MedicoEmpresa        { get { return this.GetTable<MedicoEmpresa>(); } }
		public ITable<MedicoEmpresaTuss>    MedicoEmpresaTuss    { get { return this.GetTable<MedicoEmpresaTuss>(); } }
		public ITable<MedicoPhone>          MedicoPhone          { get { return this.GetTable<MedicoPhone>(); } }
		public ITable<Procedimento>         Procedimento         { get { return this.GetTable<Procedimento>(); } }
		public ITable<Profile>              Profile              { get { return this.GetTable<Profile>(); } }
		public ITable<Project>              Project              { get { return this.GetTable<Project>(); } }
		public ITable<ProjectPhase>         ProjectPhase         { get { return this.GetTable<ProjectPhase>(); } }
		public ITable<ProjectSprint>        ProjectSprint        { get { return this.GetTable<ProjectSprint>(); } }
		public ITable<ProjectSprintVersion> ProjectSprintVersion { get { return this.GetTable<ProjectSprintVersion>(); } }
		public ITable<ProjectUser>          ProjectUser          { get { return this.GetTable<ProjectUser>(); } }
		public ITable<Setup>                Setup                { get { return this.GetTable<Setup>(); } }
		public ITable<Survey>               Survey               { get { return this.GetTable<Survey>(); } }
		public ITable<SurveyOption>         SurveyOption         { get { return this.GetTable<SurveyOption>(); } }
		public ITable<SurveyUserOption>     SurveyUserOption     { get { return this.GetTable<SurveyUserOption>(); } }
		public ITable<Task>                 Task                 { get { return this.GetTable<Task>(); } }
		public ITable<TaskAccumulatorValue> TaskAccumulatorValue { get { return this.GetTable<TaskAccumulatorValue>(); } }
		public ITable<TaskCategory>         TaskCategory         { get { return this.GetTable<TaskCategory>(); } }
		public ITable<TaskCheckPoint>       TaskCheckPoint       { get { return this.GetTable<TaskCheckPoint>(); } }
		public ITable<TaskCheckPointMark>   TaskCheckPointMark   { get { return this.GetTable<TaskCheckPointMark>(); } }
		public ITable<TaskCustomStep>       TaskCustomStep       { get { return this.GetTable<TaskCustomStep>(); } }
		public ITable<TaskDependency>       TaskDependency       { get { return this.GetTable<TaskDependency>(); } }
		public ITable<TaskFlow>             TaskFlow             { get { return this.GetTable<TaskFlow>(); } }
		public ITable<TaskFlowChange>       TaskFlowChange       { get { return this.GetTable<TaskFlowChange>(); } }
		public ITable<TaskMessage>          TaskMessage          { get { return this.GetTable<TaskMessage>(); } }
		public ITable<TaskProgress>         TaskProgress         { get { return this.GetTable<TaskProgress>(); } }
		public ITable<TaskQuestion>         TaskQuestion         { get { return this.GetTable<TaskQuestion>(); } }
		public ITable<TaskType>             TaskType             { get { return this.GetTable<TaskType>(); } }
		public ITable<TaskTypeAccumulator>  TaskTypeAccumulator  { get { return this.GetTable<TaskTypeAccumulator>(); } }
		public ITable<TUSS>                 TUSS                 { get { return this.GetTable<TUSS>(); } }
		public ITable<User>                 User                 { get { return this.GetTable<User>(); } }
		public ITable<UserEmail>            UserEmail            { get { return this.GetTable<UserEmail>(); } }
		public ITable<UserNewsRead>         UserNewsRead         { get { return this.GetTable<UserNewsRead>(); } }
		public ITable<UserPhone>            UserPhone            { get { return this.GetTable<UserPhone>(); } }

		public DevKitDB()
		{
			InitDataContext();
		}

		public DevKitDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table(Schema="public", Name="Associado")]
	public partial class Associado
	{
		[PrimaryKey, Identity] public long      id                { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa         { get; set; } // bigint
		[Column,     Nullable] public long?     nuMatricula       { get; set; } // bigint
		[Column,     Nullable] public long?     nuTitularidade    { get; set; } // bigint
		[Column,     Nullable] public long?     nuViaCartao       { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtStart           { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtLastUpdate      { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtLastContact     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUserAdd         { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserLastUpdate  { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserLastContact { get; set; } // bigint
		[Column,     Nullable] public string    stName            { get; set; } // character varying(150)
		[Column,     Nullable] public string    stAlias           { get; set; } // character varying(150)
		[Column,     Nullable] public long?     nuMonthAniversary { get; set; } // bigint
		[Column,     Nullable] public long?     nuDayAniversary   { get; set; } // bigint
		[Column,     Nullable] public long?     nuYearBirth       { get; set; } // bigint
		[Column,     Nullable] public bool?     bDeceased         { get; set; } // boolean
		[Column,     Nullable] public bool?     bHomem            { get; set; } // boolean
		[Column,     Nullable] public string    stCPF             { get; set; } // character varying(20)
		[Column,     Nullable] public long?     tgStatus          { get; set; } // bigint
		[Column,     Nullable] public long?     tgExpedicao       { get; set; } // bigint
		[Column,     Nullable] public long?     tgFaltaEnd        { get; set; } // bigint
		[Column,     Nullable] public long?     tgFaltaTelefone   { get; set; } // bigint
		[Column,     Nullable] public string    stSenha           { get; set; } // character varying(4)
	}

	[Table(Schema="public", Name="AssociadoCategoria")]
	public partial class AssociadoCategoria
	{
		[PrimaryKey, Identity] public long      id               { get; set; } // bigint
		[Column,     Nullable] public long?     fkPerson         { get; set; } // bigint
		[Column,     Nullable] public long?     fkPeopleCategory { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser           { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog            { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="AssociadoContato")]
	public partial class AssociadoContato
	{
		[PrimaryKey, Identity] public long      id            { get; set; } // bigint
		[Column,     Nullable] public long?     fkPerson      { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser        { get; set; } // bigint
		[Column,     Nullable] public long?     fkContactForm { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stMessage     { get; set; } // character varying(1500)
	}

	[Table(Schema="public", Name="AssociadoDependente")]
	public partial class AssociadoDependente
	{
		[PrimaryKey, Identity] public long   id          { get; set; } // bigint
		[Column,     Nullable] public long?  fkEmpresa   { get; set; } // bigint
		[Column,     Nullable] public long?  fkAssociado { get; set; } // bigint
		[Column,     Nullable] public long?  fkCartao    { get; set; } // bigint
		[Column,     Nullable] public string stNome      { get; set; } // character varying(35)
		[Column,     Nullable] public string stCPF       { get; set; } // character varying(30)
	}

	[Table(Schema="public", Name="AssociadoEmail")]
	public partial class AssociadoEmail
	{
		[PrimaryKey, Identity] public long      id       { get; set; } // bigint
		[Column,     Nullable] public long?     fkPerson { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser   { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog    { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stEmail  { get; set; } // character varying(250)
	}

	[Table(Schema="public", Name="AssociadoEndereco")]
	public partial class AssociadoEndereco
	{
		[PrimaryKey, Identity] public long      id            { get; set; } // bigint
		[Column,     Nullable] public long?     fkPerson      { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser        { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkEstado      { get; set; } // bigint
		[Column,     Nullable] public long?     fkCidade      { get; set; } // bigint
		[Column,     Nullable] public string    stRua         { get; set; } // character varying(150)
		[Column,     Nullable] public string    stNumero      { get; set; } // character varying(50)
		[Column,     Nullable] public string    stComplemento { get; set; } // character varying(50)
		[Column,     Nullable] public string    stReferencia  { get; set; } // character varying(150)
		[Column,     Nullable] public string    stCEP         { get; set; } // character varying(50)
		[Column,     Nullable] public bool?     bPrincipal    { get; set; } // boolean
	}

	[Table(Schema="public", Name="AssociadoMensagem")]
	public partial class AssociadoMensagem
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkPerson  { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserTo  { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stMessage { get; set; } // character varying(1500)
	}

	[Table(Schema="public", Name="AssociadoTelefone")]
	public partial class AssociadoTelefone
	{
		[PrimaryKey, Identity] public long      id            { get; set; } // bigint
		[Column,     Nullable] public long?     fkPerson      { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser        { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stPhone       { get; set; } // character varying(50)
		[Column,     Nullable] public string    stDescription { get; set; } // character varying(50)
	}

	[Table(Schema="public", Name="AuditLog")]
	public partial class AuditLog
	{
		[PrimaryKey, Identity] public long      id          { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa   { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog       { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser      { get; set; } // bigint
		[Column,     Nullable] public long?     fkActionLog { get; set; } // bigint
		[Column,     Nullable] public long?     nuType      { get; set; } // bigint
		[Column,     Nullable] public long?     fkTarget    { get; set; } // bigint
		[Column,     Nullable] public string    stLog       { get; set; } // character varying(999)
		[Column,     Nullable] public string    stDetailLog { get; set; } // character varying(3999)
	}

	[Table(Schema="public", Name="Autorizacao")]
	public partial class Autorizacao
	{
		[PrimaryKey, Identity] public long      id             { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtSolicitacao  { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkPerson       { get; set; } // bigint
		[Column,     Nullable] public long?     fkMedico       { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa      { get; set; } // bigint
		[Column,     Nullable] public long?     fkProcedimento { get; set; } // bigint
		[Column,     Nullable] public long?     tgSituacao     { get; set; } // bigint
		[Column,     Nullable] public long?     fkAssociado    { get; set; } // bigint
		[Column,     Nullable] public long?     nuMes          { get; set; } // bigint
		[Column,     Nullable] public long?     nuAno          { get; set; } // bigint
	}

	[Table(Schema="public", Name="Cidade")]
	public partial class Cidade
	{
		[PrimaryKey, Identity] public long   id       { get; set; } // bigint
		[Column,     Nullable] public long?  fkEstado { get; set; } // bigint
		[Column,     Nullable] public string stNome   { get; set; } // character varying(200)
	}

	[Table(Schema="public", Name="CompanyNews")]
	public partial class CompanyNews
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa { get; set; } // bigint
		[Column,     Nullable] public string    stTitle   { get; set; } // character varying(200)
		[Column,     Nullable] public string    stMessage { get; set; } // character varying(2000)
		[Column,     Nullable] public long?     fkProject { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser    { get; set; } // bigint
		[Column,     Nullable] public bool?     bActive   { get; set; } // boolean
	}

	[Table(Schema="public", Name="Empresa")]
	public partial class Empresa
	{
		[PrimaryKey, Identity] public long   id        { get; set; } // bigint
		[Column,     Nullable] public long?  nuEmpresa { get; set; } // bigint
		[Column,     Nullable] public long?  nuDiaFech { get; set; } // bigint
		[Column,     Nullable] public string stSigla   { get; set; } // character varying(20)
		[Column,     Nullable] public string stNome    { get; set; } // character varying(200)
	}

	[Table(Schema="public", Name="Especialidade")]
	public partial class Especialidade
	{
		[PrimaryKey, Identity] public long   id     { get; set; } // bigint
		[Column,     Nullable] public string stNome { get; set; } // character varying(150)
	}

	[Table(Schema="public", Name="Estado")]
	public partial class Estado
	{
		[PrimaryKey, Identity] public long   id      { get; set; } // bigint
		[Column,     Nullable] public string stSigla { get; set; } // character varying(20)
		[Column,     Nullable] public string stNome  { get; set; } // character varying(200)
	}

	[Table(Schema="public", Name="Fechamento")]
	public partial class Fechamento
	{
		[PrimaryKey, Identity] public long  id            { get; set; } // bigint
		[Column,     Nullable] public long? fkAutorizacao { get; set; } // bigint
		[Column,     Nullable] public long? fkEmpresa     { get; set; } // bigint
		[Column,     Nullable] public long? nuMes         { get; set; } // bigint
		[Column,     Nullable] public long? nuAno         { get; set; } // bigint
	}

	[Table(Schema="public", Name="LoteGrafica")]
	public partial class LoteGrafica
	{
		[PrimaryKey, Identity] public long      id       { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog    { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     nuCodigo { get; set; } // bigint
		[Column,     Nullable] public long?     tgAtivo  { get; set; } // bigint
	}

	[Table(Schema="public", Name="LoteGraficaCartao")]
	public partial class LoteGraficaCartao
	{
		[PrimaryKey, Identity] public long  id            { get; set; } // bigint
		[Column,     Nullable] public long? fkLoteGrafica { get; set; } // bigint
		[Column,     Nullable] public long? fkAssociado   { get; set; } // bigint
		[Column,     Nullable] public long? fkEmpresa     { get; set; } // bigint
		[Column,     Nullable] public long? nuVia         { get; set; } // bigint
		[Column,     Nullable] public long? nuTit         { get; set; } // bigint
	}

	[Table(Schema="public", Name="Medico")]
	public partial class Medico
	{
		[PrimaryKey, Identity] public long      id                { get; set; } // bigint
		[Column,     Nullable] public long?     nuCodigo          { get; set; } // bigint
		[Column,     Nullable] public string    stNome            { get; set; } // character varying(150)
		[Column,     Nullable] public string    stCnpj            { get; set; } // character varying(30)
		[Column,     Nullable] public DateTime? dtStart           { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtLastUpdate      { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtLastContact     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUserAdd         { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserLastUpdate  { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserLastContact { get; set; } // bigint
		[Column,     Nullable] public long?     nuMonthAniversary { get; set; } // bigint
		[Column,     Nullable] public long?     nuDayAniversary   { get; set; } // bigint
		[Column,     Nullable] public long?     nuYearBirth       { get; set; } // bigint
		[Column,     Nullable] public long?     fkEspecialidade   { get; set; } // bigint
		[Column,     Nullable] public bool?     tgMasculino       { get; set; } // boolean
		[Column,     Nullable] public long?     nuTipo            { get; set; } // bigint
		[Column,     Nullable] public string    stSenha           { get; set; } // character varying(20)
	}

	[Table(Schema="public", Name="MedicoAddress")]
	public partial class MedicoAddress
	{
		[PrimaryKey, Identity] public long      id            { get; set; } // bigint
		[Column,     Nullable] public long?     fkMedico      { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser        { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkEstado      { get; set; } // bigint
		[Column,     Nullable] public long?     fkCidade      { get; set; } // bigint
		[Column,     Nullable] public string    stRua         { get; set; } // character varying(150)
		[Column,     Nullable] public string    stNumero      { get; set; } // character varying(50)
		[Column,     Nullable] public string    stComplemento { get; set; } // character varying(50)
		[Column,     Nullable] public string    stReferencia  { get; set; } // character varying(150)
		[Column,     Nullable] public string    stCEP         { get; set; } // character varying(50)
		[Column,     Nullable] public bool?     bPrincipal    { get; set; } // boolean
	}

	[Table(Schema="public", Name="MedicoEmail")]
	public partial class MedicoEmail
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkMedico  { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser    { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stEmail   { get; set; } // character varying(250)
		[Column,     Nullable] public string    stContato { get; set; } // character varying(250)
	}

	[Table(Schema="public", Name="MedicoEmpresa")]
	public partial class MedicoEmpresa
	{
		[PrimaryKey, Identity] public long  id        { get; set; } // bigint
		[Column,     Nullable] public long? fkMedico  { get; set; } // bigint
		[Column,     Nullable] public long? fkEmpresa { get; set; } // bigint
	}

	[Table(Schema="public", Name="MedicoEmpresaTuss")]
	public partial class MedicoEmpresaTuss
	{
		[PrimaryKey, Identity] public long  id        { get; set; } // bigint
		[Column,     Nullable] public long? fkMedico  { get; set; } // bigint
		[Column,     Nullable] public long? fkEmpresa { get; set; } // bigint
		[Column,     Nullable] public long? nuTUSS    { get; set; } // bigint
	}

	[Table(Schema="public", Name="MedicoPhone")]
	public partial class MedicoPhone
	{
		[PrimaryKey, Identity] public long      id            { get; set; } // bigint
		[Column,     Nullable] public long?     fkMedico      { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser        { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stPhone       { get; set; } // character varying(50)
		[Column,     Nullable] public string    stDescription { get; set; } // character varying(50)
	}

	[Table(Schema="public", Name="Procedimento")]
	public partial class Procedimento
	{
		[PrimaryKey, Identity] public long   id             { get; set; } // bigint
		[Column,     Nullable] public long?  nuTUSS         { get; set; } // bigint
		[Column,     Nullable] public string stProcedimento { get; set; } // character varying(150)
		[Column,     Nullable] public string stDescGP       { get; set; } // character varying(150)
		[Column,     Nullable] public string stDescSubGP    { get; set; } // character varying(150)
	}

	[Table(Schema="public", Name="Profile")]
	public partial class Profile
	{
		[PrimaryKey, Identity] public long   id            { get; set; } // bigint
		[Column,     Nullable] public long?  fkEmpresa     { get; set; } // bigint
		[Column,     Nullable] public string stName        { get; set; } // character varying(200)
		[Column,     Nullable] public string stPermissions { get; set; } // character varying(9999)
	}

	[Table(Schema="public", Name="Project")]
	public partial class Project
	{
		[PrimaryKey, Identity] public long      id                { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa         { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser            { get; set; } // bigint
		[Column,     Nullable] public string    stName            { get; set; } // character varying(99)
		[Column,     Nullable] public long?     fkProjectTemplate { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtCreation        { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="ProjectPhase")]
	public partial class ProjectPhase
	{
		[PrimaryKey, Identity] public long   id        { get; set; } // bigint
		[Column,     Nullable] public string stName    { get; set; } // character varying(99)
		[Column,     Nullable] public long?  fkProject { get; set; } // bigint
	}

	[Table(Schema="public", Name="ProjectSprint")]
	public partial class ProjectSprint
	{
		[PrimaryKey, Identity] public long   id            { get; set; } // bigint
		[Column,     Nullable] public string stName        { get; set; } // character varying(200)
		[Column,     Nullable] public string stDescription { get; set; } // character varying(1000)
		[Column,     Nullable] public long?  fkProject     { get; set; } // bigint
		[Column,     Nullable] public long?  fkPhase       { get; set; } // bigint
	}

	[Table(Schema="public", Name="ProjectSprintVersion")]
	public partial class ProjectSprintVersion
	{
		[PrimaryKey, Identity] public long   id             { get; set; } // bigint
		[Column,     Nullable] public string stName         { get; set; } // character varying(20)
		[Column,     Nullable] public long?  fkSprint       { get; set; } // bigint
		[Column,     Nullable] public long?  fkVersionState { get; set; } // bigint
	}

	[Table(Schema="public", Name="ProjectUser")]
	public partial class ProjectUser
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser    { get; set; } // bigint
		[Column,     Nullable] public long?     fkProject { get; set; } // bigint
		[Column,     Nullable] public string    stRole    { get; set; } // character varying(99)
		[Column,     Nullable] public DateTime? dtJoin    { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="Setup")]
	public partial class Setup
	{
		[PrimaryKey, Identity] public long   id               { get; set; } // bigint
		[Column,     Nullable] public string stPhoneMask      { get; set; } // character varying(99)
		[Column,     Nullable] public string stDateFormat     { get; set; } // character varying(99)
		[Column,     Nullable] public string stProtocolFormat { get; set; } // character varying(20)
	}

	[Table(Schema="public", Name="Survey")]
	public partial class Survey
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa { get; set; } // bigint
		[Column,     Nullable] public string    stTitle   { get; set; } // character varying(200)
		[Column,     Nullable] public string    stMessage { get; set; } // character varying(2000)
		[Column,     Nullable] public long?     fkProject { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser    { get; set; } // bigint
		[Column,     Nullable] public bool?     bActive   { get; set; } // boolean
	}

	[Table(Schema="public", Name="SurveyOption")]
	public partial class SurveyOption
	{
		[PrimaryKey, Identity] public long   id       { get; set; } // bigint
		[Column,     Nullable] public long?  fkSurvey { get; set; } // bigint
		[Column,     Nullable] public int?   nuOrder  { get; set; } // integer
		[Column,     Nullable] public string stOption { get; set; } // character varying(200)
	}

	[Table(Schema="public", Name="SurveyUserOption")]
	public partial class SurveyUserOption
	{
		[PrimaryKey, Identity] public long      id             { get; set; } // bigint
		[Column,     Nullable] public long?     fkSurvey       { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser         { get; set; } // bigint
		[Column,     Nullable] public long?     fkSurveyOption { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog          { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="Task")]
	public partial class Task
	{
		[PrimaryKey, Identity] public long      id                { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa         { get; set; } // bigint
		[Column,     Nullable] public bool?     bComplete         { get; set; } // boolean
		[Column,     Nullable] public DateTime? dtStart           { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtLastEdit        { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stProtocol        { get; set; } // character varying(20)
		[Column,     Nullable] public string    stTitle           { get; set; } // character varying(200)
		[Column,     Nullable] public string    stLocalization    { get; set; } // character varying(200)
		[Column,     Nullable] public string    stDescription     { get; set; } // character varying(4000)
		[Column,     Nullable] public long?     nuPriority        { get; set; } // bigint
		[Column,     Nullable] public long?     fkProject         { get; set; } // bigint
		[Column,     Nullable] public long?     fkPhase           { get; set; } // bigint
		[Column,     Nullable] public long?     fkSprint          { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserStart       { get; set; } // bigint
		[Column,     Nullable] public long?     fkVersion         { get; set; } // bigint
		[Column,     Nullable] public long?     fkTaskType        { get; set; } // bigint
		[Column,     Nullable] public long?     fkTaskCategory    { get; set; } // bigint
		[Column,     Nullable] public long?     fkTaskFlowCurrent { get; set; } // bigint
		[Column,     Nullable] public long?     fkReleaseVersion  { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserResponsible { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtExpired         { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="TaskAccumulatorValue")]
	public partial class TaskAccumulatorValue
	{
		[PrimaryKey, Identity] public long      id          { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog       { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     nuValue     { get; set; } // bigint
		[Column,     Nullable] public long?     nuHourValue { get; set; } // bigint
		[Column,     Nullable] public long?     nuMinValue  { get; set; } // bigint
		[Column,     Nullable] public long?     fkTask      { get; set; } // bigint
		[Column,     Nullable] public long?     fkTaskAcc   { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser      { get; set; } // bigint
	}

	[Table(Schema="public", Name="TaskCategory")]
	public partial class TaskCategory
	{
		[PrimaryKey, Identity] public long   id               { get; set; } // bigint
		[Column,     Nullable] public string stName           { get; set; } // character varying(200)
		[Column,     Nullable] public string stAbreviation    { get; set; } // character varying(10)
		[Column,     Nullable] public string stDescription    { get; set; } // character varying(500)
		[Column,     Nullable] public long?  fkTaskType       { get; set; } // bigint
		[Column,     Nullable] public bool?  bExpires         { get; set; } // boolean
		[Column,     Nullable] public long?  nuExpiresDays    { get; set; } // bigint
		[Column,     Nullable] public long?  nuExpiresHours   { get; set; } // bigint
		[Column,     Nullable] public long?  nuExpiresMinutes { get; set; } // bigint
	}

	[Table(Schema="public", Name="TaskCheckPoint")]
	public partial class TaskCheckPoint
	{
		[PrimaryKey, Identity] public long   id         { get; set; } // bigint
		[Column,     Nullable] public string stName     { get; set; } // character varying(50)
		[Column,     Nullable] public long?  fkCategory { get; set; } // bigint
		[Column,     Nullable] public bool?  bMandatory { get; set; } // boolean
	}

	[Table(Schema="public", Name="TaskCheckPointMark")]
	public partial class TaskCheckPointMark
	{
		[PrimaryKey, Identity] public long      id           { get; set; } // bigint
		[Column,     Nullable] public long?     fkCheckPoint { get; set; } // bigint
		[Column,     Nullable] public long?     fkTask       { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser       { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog        { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="TaskCustomStep")]
	public partial class TaskCustomStep
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkTask    { get; set; } // bigint
		[Column,     Nullable] public bool?     bSelected { get; set; } // boolean
		[Column,     Nullable] public string    stName    { get; set; } // character varying(150)
		[Column,     Nullable] public long?     fkUser    { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog     { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="TaskDependency")]
	public partial class TaskDependency
	{
		[PrimaryKey, Identity] public long      id         { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog      { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser     { get; set; } // bigint
		[Column,     Nullable] public long?     fkMainTask { get; set; } // bigint
		[Column,     Nullable] public long?     fkSubTask  { get; set; } // bigint
	}

	[Table(Schema="public", Name="TaskFlow")]
	public partial class TaskFlow
	{
		[PrimaryKey, Identity] public long   id             { get; set; } // bigint
		[Column,     Nullable] public bool?  bForceComplete { get; set; } // boolean
		[Column,     Nullable] public bool?  bForceOpen     { get; set; } // boolean
		[Column,     Nullable] public string stName         { get; set; } // character varying(200)
		[Column,     Nullable] public long?  nuOrder        { get; set; } // bigint
		[Column,     Nullable] public long?  fkTaskType     { get; set; } // bigint
		[Column,     Nullable] public long?  fkTaskCategory { get; set; } // bigint
	}

	[Table(Schema="public", Name="TaskFlowChange")]
	public partial class TaskFlowChange
	{
		[PrimaryKey, Identity] public long      id             { get; set; } // bigint
		[Column,     Nullable] public string    stMessage      { get; set; } // character varying(300)
		[Column,     Nullable] public DateTime? dtLog          { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkTask         { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser         { get; set; } // bigint
		[Column,     Nullable] public long?     fkOldFlowState { get; set; } // bigint
		[Column,     Nullable] public long?     fkNewFlowState { get; set; } // bigint
	}

	[Table(Schema="public", Name="TaskMessage")]
	public partial class TaskMessage
	{
		[PrimaryKey, Identity] public long      id            { get; set; } // bigint
		[Column,     Nullable] public string    stMessage     { get; set; } // character varying(999)
		[Column,     Nullable] public DateTime? dtLog         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkTask        { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser        { get; set; } // bigint
		[Column,     Nullable] public long?     fkCurrentFlow { get; set; } // bigint
	}

	[Table(Schema="public", Name="TaskProgress")]
	public partial class TaskProgress
	{
		[PrimaryKey, Identity] public long      id             { get; set; } // bigint
		[Column,     Nullable] public long?     fkTask         { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserAssigned { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog          { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="TaskQuestion")]
	public partial class TaskQuestion
	{
		[PrimaryKey, Identity] public long      id             { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtOpen         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtClosed       { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stStatement    { get; set; } // character varying(2000)
		[Column,     Nullable] public string    stAnswer       { get; set; } // character varying(2000)
		[Column,     Nullable] public long?     fkTask         { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserOpen     { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserDirected { get; set; } // bigint
		[Column,     Nullable] public bool?     bFinal         { get; set; } // boolean
	}

	[Table(Schema="public", Name="TaskType")]
	public partial class TaskType
	{
		[PrimaryKey, Identity] public long   id             { get; set; } // bigint
		[Column,     Nullable] public long?  fkEmpresa      { get; set; } // bigint
		[Column,     Nullable] public bool?  bManaged       { get; set; } // boolean
		[Column,     Nullable] public bool?  bCondensedView { get; set; } // boolean
		[Column,     Nullable] public bool?  bKPA           { get; set; } // boolean
		[Column,     Nullable] public string stName         { get; set; } // character varying(200)
		[Column,     Nullable] public long?  fkProject      { get; set; } // bigint
	}

	[Table(Schema="public", Name="TaskTypeAccumulator")]
	public partial class TaskTypeAccumulator
	{
		[PrimaryKey, Identity] public long   id             { get; set; } // bigint
		[Column,     Nullable] public bool?  bEstimate      { get; set; } // boolean
		[Column,     Nullable] public string stName         { get; set; } // character varying(30)
		[Column,     Nullable] public long?  fkTaskType     { get; set; } // bigint
		[Column,     Nullable] public long?  fkTaskAccType  { get; set; } // bigint
		[Column,     Nullable] public long?  fkTaskFlow     { get; set; } // bigint
		[Column,     Nullable] public long?  fkTaskCategory { get; set; } // bigint
	}

	[Table(Schema="public", Name="TUSS")]
	public partial class TUSS
	{
		[PrimaryKey, Identity] public long   id               { get; set; } // bigint
		[Column,     Nullable] public long?  nuCodTUSS        { get; set; } // bigint
		[Column,     Nullable] public string stDescricaoGP    { get; set; } // character varying(800)
		[Column,     Nullable] public string stDescricaoSubGP { get; set; } // character varying(800)
		[Column,     Nullable] public string stProcedimento   { get; set; } // character varying(2000)
	}

	[Table(Schema="public", Name="User")]
	public partial class User
	{
		[PrimaryKey, Identity] public long      id               { get; set; } // bigint
		[Column,     Nullable] public long?     fkEmpresa        { get; set; } // bigint
		[Column,     Nullable] public bool?     bActive          { get; set; } // boolean
		[Column,     Nullable] public string    stLogin          { get; set; } // character varying(200)
		[Column,     Nullable] public string    stName           { get; set; } // character varying(200)
		[Column,     Nullable] public string    stPassword       { get; set; } // character varying(30)
		[Column,     Nullable] public long?     fkProfile        { get; set; } // bigint
		[Column,     Nullable] public long?     fkPerson         { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLastLogin      { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtCreation       { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stCurrentSession { get; set; } // character varying(20)
	}

	[Table(Schema="public", Name="UserEmail")]
	public partial class UserEmail
	{
		[PrimaryKey, Identity] public long   id      { get; set; } // bigint
		[Column,     Nullable] public long?  fkUser  { get; set; } // bigint
		[Column,     Nullable] public string stEmail { get; set; } // character varying(250)
	}

	[Table(Schema="public", Name="UserNewsRead")]
	public partial class UserNewsRead
	{
		[PrimaryKey, Identity] public long      id     { get; set; } // bigint
		[Column,     Nullable] public long?     fkNews { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog  { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser { get; set; } // bigint
	}

	[Table(Schema="public", Name="UserPhone")]
	public partial class UserPhone
	{
		[PrimaryKey, Identity] public long   id            { get; set; } // bigint
		[Column,     Nullable] public long?  fkUser        { get; set; } // bigint
		[Column,     Nullable] public string stPhone       { get; set; } // character varying(50)
		[Column,     Nullable] public string stDescription { get; set; } // character varying(50)
	}

	public static partial class TableExtensions
	{
		public static Associado Find(this ITable<Associado> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AssociadoCategoria Find(this ITable<AssociadoCategoria> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AssociadoContato Find(this ITable<AssociadoContato> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AssociadoDependente Find(this ITable<AssociadoDependente> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AssociadoEmail Find(this ITable<AssociadoEmail> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AssociadoEndereco Find(this ITable<AssociadoEndereco> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AssociadoMensagem Find(this ITable<AssociadoMensagem> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AssociadoTelefone Find(this ITable<AssociadoTelefone> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static AuditLog Find(this ITable<AuditLog> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Autorizacao Find(this ITable<Autorizacao> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Cidade Find(this ITable<Cidade> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static CompanyNews Find(this ITable<CompanyNews> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Empresa Find(this ITable<Empresa> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Especialidade Find(this ITable<Especialidade> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Estado Find(this ITable<Estado> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Fechamento Find(this ITable<Fechamento> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static LoteGrafica Find(this ITable<LoteGrafica> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static LoteGraficaCartao Find(this ITable<LoteGraficaCartao> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Medico Find(this ITable<Medico> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static MedicoAddress Find(this ITable<MedicoAddress> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static MedicoEmail Find(this ITable<MedicoEmail> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static MedicoEmpresa Find(this ITable<MedicoEmpresa> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static MedicoEmpresaTuss Find(this ITable<MedicoEmpresaTuss> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static MedicoPhone Find(this ITable<MedicoPhone> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Procedimento Find(this ITable<Procedimento> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Profile Find(this ITable<Profile> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Project Find(this ITable<Project> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ProjectPhase Find(this ITable<ProjectPhase> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ProjectSprint Find(this ITable<ProjectSprint> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ProjectSprintVersion Find(this ITable<ProjectSprintVersion> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ProjectUser Find(this ITable<ProjectUser> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Setup Find(this ITable<Setup> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Survey Find(this ITable<Survey> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static SurveyOption Find(this ITable<SurveyOption> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static SurveyUserOption Find(this ITable<SurveyUserOption> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Task Find(this ITable<Task> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskAccumulatorValue Find(this ITable<TaskAccumulatorValue> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskCategory Find(this ITable<TaskCategory> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskCheckPoint Find(this ITable<TaskCheckPoint> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskCheckPointMark Find(this ITable<TaskCheckPointMark> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskCustomStep Find(this ITable<TaskCustomStep> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskDependency Find(this ITable<TaskDependency> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskFlow Find(this ITable<TaskFlow> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskFlowChange Find(this ITable<TaskFlowChange> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskMessage Find(this ITable<TaskMessage> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskProgress Find(this ITable<TaskProgress> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskQuestion Find(this ITable<TaskQuestion> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskType Find(this ITable<TaskType> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TaskTypeAccumulator Find(this ITable<TaskTypeAccumulator> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TUSS Find(this ITable<TUSS> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static User Find(this ITable<User> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserEmail Find(this ITable<UserEmail> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserNewsRead Find(this ITable<UserNewsRead> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserPhone Find(this ITable<UserPhone> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}
	}
}
